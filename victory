#!/bin/bash
# Finish Setup my ArcoLinux

##################################################################################################################
# # Aurthor     :Vicck-tech 
# 
# 
# 
##################################################################################################################

# Make sure each command executes properly
check_exit_status() {

	if [ $? -eq 0 ]
	then
		echo
		echo "Success"
		echo
	else
		echo
		echo "[ERROR] Update Failed! Check the errors and try again"
		echo
		
		read -p "The last command exited with an error. Exit script? (y/n) " answer

            if [ "$answer" == "y" ]
            then
                exit 1
            fi
	fi
}

function greeting() {

	echo
	echo "+-------------------------------------------------+"
	echo "|-- Hello, $USER. Let's install Victory Edition.--|"
	echo "+-------------------------------------------------+"
	echo
	echo "This is NOT a silent install" 
	echo
	echo "you will be asked some questions as it progresses"
	echo
	echo
	echo "THIS IS NOT A SHORT PROCESS, IT WILL TAKE SOME TIME"
	sleep 7s
}

# searching for the fastest mirrors
function mirror() {

	echo "Updating your Mirrors."
	sudo reflector -f 30 -l 30 --number 10 --verbose --save /etc/pacman.d/mirrorlist
#	check_exit_status
}

# Downloading and installing all Arch Linux and ArcoLinux packages
function update() {

	echo "Updating Arch & Arco."
	echo
	sleep 3s
	sudo pacman -Sy archlinux-keyring --noconfirm;
	sudo pacman -Syyu --noconfirm;
	check_exit_status
}

function arch() {
	echo
	echo "Running ArchLinux Setup Scripts"
	echo
	sleep 3s
#	cd ~/victory/ArchWay/
	echo
	sh ArchWay/10-add-keyservers-for-key-importing-v*.sh
	sh ArchWay/20-trust-key-v*.sh
	sh ArchWay/30-add-arcolinux-repo-to-pacman-conf-v*.sh
	sh ArchWay/40-install-software-ArcoLinux-uses-in-bashrc-v*.sh
	sh ArchWay/50-create-autologin-group-to-be-able-to-autologin-v*.sh
#	check_exit_status
}

function arco() {
	echo
	echo "Running ArcoLinux Setup Scripts"
	echo
	sleep 3s
#	cd ~/victory/ArcoInstall/
	echo
	sh ArcoInstall/000-use-all-cores-makepkg-conf-v*.sh
	sh ArcoInstall/100-display-manager-and-desktop-v*.sh
	sh ArcoInstall/110-install-sound-v*.sh
	sh ArcoInstall/120-bluetooth-v*.sh
	sh ArcoInstall/121-fix-bluetooth-switch-not-working-v*.sh
	sh ArcoInstall/130-install-printers-v*.sh
	sh ArcoInstall/140-install-samba-v*.sh
	sh ArcoInstall/150-install-network-discovery-v*.sh
	sh ArcoInstall/200-software-arch-linux-repo-v*.sh
	sh ArcoInstall/300-software-AUR-repo-v*.sh
	sh ArcoInstall/400-software-arch-linux-repo-distro-specific-v*.sh
	sh ArcoInstall/500-software-AUR-repo-distro-specific-v*.sh
	sh ArcoInstall/600-software-from-ArcoLinux-repo-v*.sh
	sh ArcoInstall/700-installing-fonts-v*.sh
	sh ArcoInstall/810-software-from-victory-repo-v1.sh
	check_exit_status
}

function lightdm() {
	echo
	cd /etc/lightdm/
	sudo sed -i -e 's/#greeter-session=example-gtk-gnome/greeter-session=lightdm-webkit2-greeter/g' /etc/lightdm/lightdm.conf
	echo
	echo

}

function greeter() {
	echo
	cd /etc/lightdm/
	echo
	sudo sed -i -e 's/webkit_theme        = antergos/webkit_theme        = litarvan/g' /etc/lightdm/lightdm-webkit2-greeter.conf
	echo

}

# Put the fancy bash promt back after updating
function bash() {

	echo "Putting Bashrc back together."
	echo 'source ~/.fancy-user-bash.sh' | sudo tee --append /etc/skel/.bashrc
	echo
	sudo cp /etc/skel/.bashrc ~/.bashrc && source ~/.bashrc;
	echo
	gsettings set org.gnome.desktop.default-applications.terminal exec 'terminator'
	check_exit_status
}

# Put the fancy bash promt back after updating
function settings() {
	echo
	gsettings set org.gnome.desktop.interface gtk-theme "Flat-Remix-GTK-Blue-Dark"
	gsettings set org.gnome.desktop.interface icon-theme "Flat-Remix-Blue-Dark"
	gsettings set org.gnome.desktop.interface document-font-name 'Noto Sans Regular 13'
	gsettings set org.gnome.desktop.interface font-name 'Noto Sans Regular 13'
	gsettings set org.gnome.desktop.interface monospace-font-name 'Noto Sans Regular 14'
	gsettings set org.gnome.nautilus.desktop font 'Noto Sans Regular 13'
	echo
}

# Setting up Gnome Dock
function dock() {

	echo "Setting up Gnome Dock"
	echo
	sleep 3s
	gsettings set org.gnome.shell favorite-apps "['firefox.desktop', 'chromium.desktop', 'org.gnome.Nautilus.desktop', 'simplenote.desktop', 'terminator.desktop', 'realvnc-vncviewer.desktop', 'com.teamviewer.TeamViewer.desktop', 'virtualbox.desktop', 'onboard.desktop']"
	check_exit_status
}

# Debloat ArcolinuxD
function debloat() {

	echo "Debloating."
	echo
	sleep 3s
	sudo pacman -Rdsu arcolinux-wallpapers-git gnome-books gnome-backgrounds gnome-clocks gnome-terminal gnome-documents gnome-maps gnome-music gnome-todo gnome-weather gnome-boxes epiphany totem --noconfirm;
	check_exit_status
}

# Put the fancy bash promt back after updating
function bash() {

	echo "Putting Bashrc back together."
	echo 'source ~/.fancy-user-bash.sh' | sudo tee --append /etc/skel/.bashrc
	echo
	sudo cp /etc/skel/.bashrc ~/.bashrc && source ~/.bashrc;
	check_exit_status
}

# Put the fancy bash promt back after updating
function wallpaper() {

	echo "Putting Bashrc back together."
	echo
	sudo cp -r ~/testing/victorylinux /usr/share/backgrounds
	echo
	check_exit_status
}

function autostart() {
	echo
	echo
	cp /usr/share/applications/realvnc-vncserver-service.desktop /etc/skel/.config/autostart/
	cp /usr/share/applications/com.teamviewer.TeamViewer.desktop /etc/skel/.config/autostart/
	cp /usr/share/applications/variety.desktop /etc/skel/.config/autostart/
	echo
	sudo chmod +x /etc/skel/.config/autostart/*.desktop
}

# Perform the maintenance and clean-up duties, remove orphaned files to keep the system running optimally
function housekeeping() {
	
		echo
#		read -p "Are you ready to clean up? (y/n) " answer

#            if [ "$answer" == "y" ]
#            then
        echo "Cleaning up."
#		sudo rm -rf /usr/share/backgrounds/arcolinux
#		sudo rm -rf /usr/share/backgrounds/gnome
		sudo pacman -Rns $(pacman -Qtdq) --noconfirm;
		sudo rm-rf ~/victory
		sudo rm-rf /usr/share/backgrounds/gnome
#            fi
}


function leave() {

	echo
	echo "------------------------------------------------------------"
	echo "---- ArcoLinux-Victory Edition has finished installing! ----"
	echo "------------------------------------------------------------"
	echo
	echo "I hope you Enjoy this Victory Edition"
	echo
	echo
	echo
	echo "Restarting in 15 Seconds"
	sleep 15s
	reboot
}

greeting
mirror
update
arch
arco
lightdm
victory
greeter
plank
bash
wallpaper
debloat
housekeeping
leave